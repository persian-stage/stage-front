import type { Metadata } from "next";
import { Inter } from "next/font/google";
import  theme  from "@/app/lib/thems";
import { ThemeProvider, Container } from "@mui/material";
import NavBar from "@/app/component/header/Navbar";
import { AppRouterCacheProvider } from '@mui/material-nextjs/v13-appRouter';
import "./globals.css";
import CssBaseline from "@mui/material/CssBaseline";
import dynamic from "next/dynamic";
import ClientSnackbarProvider from "@/app/component/clientProviders/ClientSnackbarProvider";
import * as React from "react";
import { WebSocketProvider } from "@/app/context/WebSocketContext";

const inter = Inter({ subsets: ["latin"] });

const ClientProvider = dynamic(() => import('@/app/component/ClientProvider'), { ssr: false });
const LoginModalClient = dynamic(() => import('@/app/component/modals/auth/LoginModalClient'), { ssr: false });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

    return (
        <html lang="en">
        <body>
            <ClientProvider>
                <AppRouterCacheProvider>
                    <WebSocketProvider>
                        <ThemeProvider theme={ theme }>
                            <LoginModalClient>
                                <CssBaseline/>
                                    <NavBar></NavBar>
                                    <main>
                                        <Container sx={ {
                                            mt: 10,
                                        } }>
                                            { children }
                                        </Container>
                                    </main>
                            </LoginModalClient>
                            <ClientSnackbarProvider/>
                        </ThemeProvider>
                    </WebSocketProvider>
                </AppRouterCacheProvider>
            </ClientProvider>
        </body>
        </html>
    );
}
